@page "/order/{OrderId:int}"

<div class="d-flex align-content-center justify-center gap-3">
    @if (isLoading)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else
    {
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6"><b>Order #@OrderId</b></MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="d-flex flex-column gap-2">
                <MudPaper Class="d-flex flex-column gap-1" Elevation="0">
                    @foreach (var merchantOrder in order.MerchantOrders!)
                    {
                        <MudTable Items="@merchantOrder!.OrderItems" Elevation="0" Dense="true">
                            <HeaderContent>
                                <MudTh><b>Service Name</b></MudTh>
                                <MudTh><b>Quantity</b></MudTh>
                                <MudTh><b>Price</b></MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Service Name">@context.Item!.Name</MudTd>
                                    <MudTd DataLabel="Quantity">x @context!.Quantity</MudTd>
                                    <MudTd DataLabel="Price">@context.Item!.Currency!.Symbol @context.Item!.Price.ToString("N2")</MudTd>
                                </RowTemplate>
                            </MudTable>
                        <div class="d-flex flex-row pr-3 pb-3">
                            <MudText Class="d-flex">
                                <b>Total Price: @merchantOrder!.OrderItems![0].Item!.Currency!.Symbol @(merchantOrder.OrderItems.Select(x => x.Quantity * x.Item!.Price).Sum().ToString("N2"))</b>
                            </MudText>
                        </div>
                        <MudDivider></MudDivider>
                    }
                </MudPaper>
                <MudDivider></MudDivider>
            </MudCardContent>
            <MudCardActions Class="d-flex gap-4 justify-end">
                <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="OnClickCancelAsync">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" Disabled=@(isPaymentInProgress) OnClick="OnClickPayAsync">
                    @if (isPaymentInProgress)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Continue
                </MudButton>
            </MudCardActions>
        </MudCard>
    }
</div>